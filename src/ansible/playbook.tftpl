---
- name: Deploy Docker Compose application
  hosts: webservers
  become: true
  tasks:
    - name: Wait for SSH to become available
      ansible.builtin.wait_for:
        port: 22
        state: started
        search_regex: OpenSSH
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        delay: 10
        timeout: 2400

    - name: Ensure the target directory exists
      ansible.builtin.file:
        path: /home/${user}/soft
        state: directory
        owner: ${user}
        group: ${user}
        mode: '0755'

    - name: Create shared-net network if it does not exist
      ansible.builtin.shell: >
        docker network inspect shared-net > /dev/null 2>&1 || docker network create shared-net

    - name: Copy docker-compose file to server
      ansible.builtin.copy:
        src: soft/compose.yml
        dest: /home/${user}/soft/compose.yml
        owner: ${user}
        group: ${user}
        mode: '0644'

    - name: Starting containers from docker-compose
      ansible.builtin.shell:
        chdir: /home/${user}/soft
        cmd: docker compose up -d

    - name: Starting container with gitlab-runner
      command: >
        docker run -d --name gitlab-runner --restart always
        -v /srv/gitlab-runner/config:/etc/gitlab-runner
        -v /var/run/docker.sock:/var/run/docker.sock
        gitlab/gitlab-runner:alpine

    - name: Wait for Nginx Proxy Manager to be up and running
      wait_for:
        host: "localhost"
        port: 81
        state: started
        delay: 10
        timeout: 300

    - name: Obtain authentication token
      ansible.builtin.uri:
        url: "http://${ip}:81/api/tokens"
        method: POST
        body_format: json
        body:
          identity: "admin@example.com"
          secret: "changeme"
        headers:
          Content-Type: "application/json"
        return_content: yes
      register: auth_token_response

    - name: Create an additional proxy host https
      ansible.builtin.uri:
        url: "http://${ip}:81/api/nginx/proxy-hosts"
        method: POST
        body_format: json
        body:
          domain_names:
            - "${nginx_host}"
          forward_scheme: "https"
          forward_host: "${nginx_config.forward_host}"
          forward_port: ${nginx_config.forward_port}
          access_list_id: 0
          certificate_id: 0
          ssl_forced: false
          advanced_config: ${nginx_config.advanced_config}
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ auth_token_response.json.token }}"
        status_code: 201  


    - name: Change admin user name and password
      ansible.builtin.uri:
        url: "http://${ip}:81/api/users/1/auth"
        method: PUT
        body_format: json
        body:
          type: "password"
          secret: "${nginx_config.new_password}"
          current: "changeme"
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ auth_token_response.json.token }}"
        status_code: 201

    - name: Update user details
      ansible.builtin.uri:
        url: "http://${ip}:81/api/users/1"
        method: PUT
        body_format: json
        body:
          name: "${nginx_config.new_username}"
          nickname: "${nginx_config.new_nickname}"
          email: "${nginx_config.new_email}"
          roles: ["admin"]
          is_disabled: false
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ auth_token_response.json.token }}"
        status_code: 200
